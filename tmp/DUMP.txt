    // let mut m = machine::BasicMachine::new();
    // let e = executor::StatementExecutor;
    // let addi = stats.iter().find(|s| {
    //     if let Instruction { opcode, .. } = s {
    //         if let Command::OP(Opcode::RV32I(o)) = opcode {
    //             match o {
    //                 crate::spec::extensions::rv32i::Opcode::ADDI => {
    //                     true
    //                 },
    //                 _ => {
    //                     false
    //                 }
    //             }
    //
    //         }
    //         else {
    //             false
    //         }
    //     }
    //     else {
    //         false
    //     }
    // }).unwrap();

    // m.info();
    // e.execute(&mut m.cpu, addi.get(0).unwrap());
    // e.execute(&mut m.cpu, li.get(0).unwrap());
    // m.info();
